{"version":3,"file":"static/js/login-page.fb7ea0d4.chunk.js","mappings":"qOA0DA,UAjDkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAEJE,MAAM,yBACNC,IAAI,KACJC,SAAS,qBACZC,SAAUL,EAAAA,KAAaI,aAenBE,GAAkBC,EAAAA,EAAAA,MAClBC,GAAeD,EAAAA,EAAAA,MACrB,OACE,4BACE,oCACA,SAAC,KAAD,CACEE,cAlBgB,CACpBP,MAAO,GACPG,SAAU,IAiBNK,iBAAkBX,EAClBY,SAfe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACtBX,EAAoBU,EAApBV,MAAOG,EAAaO,EAAbP,SACfR,GAASiB,EAAAA,EAAAA,IAAM,CAAEZ,MAAAA,EAAOG,SAAAA,KACxBV,EAAS,wCACTkB,KAQE,UAKE,UAAC,KAAD,CAAME,aAAa,MAAnB,WACE,kBAAOC,QAASR,EAAhB,qBACA,SAAC,KAAD,CAAOS,KAAK,QAAQC,KAAK,QAAQC,GAAIX,KACrC,SAAC,KAAD,CAAcU,KAAK,SAASE,UAAU,SAEtC,kBAAOJ,QAASV,EAAhB,uBACA,SAAC,KAAD,CAAOW,KAAK,OAAOC,KAAK,WAAWC,GAAIb,KACvC,SAAC,KAAD,CAAcY,KAAK,WAAWE,UAAU,SACxC,mBAAQH,KAAK,SAAb","sources":["views/LoginView.jsx"],"sourcesContent":["import React from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/authOperations';\nimport { useNavigate } from 'react-router-dom';\n\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nconst LoginPage = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const schema = yup.object().shape({\n    email: yup\n      .string()\n      .email('Must be a valid email')\n      .max(255)\n      .required('Email is required'),\n    password: yup.string().required(),\n  });\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { email, password } = values;\n    dispatch(login({ email, password }));\n    navigate('/goit-react-hw-08-phonebook/contacts');\n    resetForm();\n  };\n\n  const passwordInputId = nanoid();\n  const emailInputId = nanoid();\n  return (\n    <div>\n      <h2>Log In</h2>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form autoComplete=\"off\">\n          <label htmlFor={emailInputId}>E-mail</label>\n          <Field type=\"email\" name=\"email\" id={emailInputId} />\n          <ErrorMessage name=\"e-mail\" component=\"div\" />\n\n          <label htmlFor={passwordInputId}>Password</label>\n          <Field type=\"text\" name=\"password\" id={passwordInputId} />\n          <ErrorMessage name=\"password\" component=\"div\" />\n          <button type=\"submit\">Log In</button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["navigate","useNavigate","dispatch","useDispatch","schema","yup","shape","email","max","required","password","passwordInputId","nanoid","emailInputId","initialValues","validationSchema","onSubmit","values","resetForm","login","autoComplete","htmlFor","type","name","id","component"],"sourceRoot":""}