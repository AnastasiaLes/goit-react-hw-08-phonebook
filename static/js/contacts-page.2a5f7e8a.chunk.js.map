{"version":3,"file":"static/js/contacts-page.2a5f7e8a.chunk.js","mappings":"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","sources":["components/Form/Form.styled.js","components/Form/Form.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/filter.jsx","views/ContactView.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const FieldName = styled.label`\n  margin-left: 30px;\n  display: flex;\n  margin-right: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const ContactField = styled(Field)`\n  margin-left: 30px;\n  display: flex;\n  color: grey;\n  padding: 5px;\n  margin-bottom: 20px;\n`;\n\nexport const AddContactButton = styled.button`\n  margin-left: 30px;\n  display: flex;\n  padding: 16px 20px;\n  border: none;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport { ContactField, FieldName, AddContactButton } from './Form.styled';\nimport { nanoid } from 'nanoid';\nimport * as yup from 'yup';\nimport { useAddContactMutation } from 'redux/contactsSlice';\nimport swal from 'sweetalert';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.number().required().positive(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport function NameField({ listOfContacts }) {\n  const [, { isLoading }] = useAddContactMutation();\n  const [addContact] = useAddContactMutation();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, number } = values;\n    const newContact = {\n      name,\n      number,\n      id: nanoid(),\n    };\n    swal({\n      title: 'Contact was added!',\n      icon: 'success',\n      button: false,\n    });\n\n    listOfContacts.find(contact => contact.name === newContact.name)\n      ? swal({\n          title: 'Oops!',\n          text: `${newContact.name} is already in contacts`,\n          icon: 'error',\n          button: 'Ok',\n        })\n      : addContact(newContact);\n\n    resetForm();\n  };\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form autoComplete=\"off\">\n        <FieldName htmlFor={nameInputId}>Name</FieldName>\n        <ContactField type=\"text\" name=\"name\" id={nameInputId} />\n        <ErrorMessage name=\"name\" component=\"div\" />\n\n        <FieldName htmlFor={numberInputId}>Number</FieldName>\n        <ContactField type=\"tel\" name=\"number\" id={numberInputId} />\n        <ErrorMessage name=\"number\" component=\"div\" />\n\n        <AddContactButton type=\"submit\" disabled={isLoading}>\n          {' '}\n          {isLoading ? '...' : 'Add contact'}\n        </AddContactButton>\n      </Form>\n    </Formik>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const ListElement = styled.li`\n  margin: 10px;\n`;\n\nexport const DeleteBtn = styled.button`\n  margin-left: 20px;\n  border: solid 1px gray;\n  background-color: lightsalmon;\n  padding: 5px 10px;\n  cursor: pointer;\n`;\n","import { ListElement, DeleteBtn } from './ContactList.styled';\nimport { useDeleteContactMutation } from 'redux/contactsSlice';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  return (\n    <ListElement>\n      {name}: {number}\n      <DeleteBtn\n        type=\"button\"\n        disabled={isDeleting}\n        onClick={() => deleteContact(id)}\n      >\n        {' '}\n        {isDeleting ? 'Deleting...' : 'Delete'}\n      </DeleteBtn>\n    </ListElement>\n  );\n};\n","import { ContactItem } from './ContactItem';\n\nexport const ContactList = ({ listOfContacts }) => {\n  return (\n    <div>\n      <h2>Contacts</h2>\n      <ul>\n        {listOfContacts.map(contact => (\n          <ContactItem key={contact.id} {...contact} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterContainer = styled.div`\n  /* display: flex; */\n  margin: 10px;\n  margin-left: 30px;\n`;\n\nexport const FilterName = styled.label`\n  display: flex;\n  margin-bottom: 15px;\n`;\n\nexport const FilterInput = styled.input`\n  display: flex;\n`;\n","import React from 'react';\nimport { FilterContainer, FilterName, FilterInput } from './Filter.styled';\n\nexport const FilterField = ({ addFilter }) => {\n  return (\n    <FilterContainer>\n      <FilterName>Find contacts by name</FilterName>\n      <FilterInput type=\"text\" name=\"filter\" onChange={addFilter} />\n    </FilterContainer>\n  );\n};\n","import { NameField } from 'components/Form/Form';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { FilterField } from 'components/Filter/filter';\nimport { useGetContactsQuery } from 'redux/contactsSlice';\nimport { useState } from 'react';\n\nexport default function ContactsView() {\n  const [search, setSearch] = useState('');\n  const { data, isFetching } = useGetContactsQuery();\n\n  const normalizedFilter = search.toLocaleLowerCase();\n  const visibleContacts = data?.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(normalizedFilter)\n  );\n\n  const addFilter = event => {\n    setSearch(event.currentTarget.value);\n  };\n\n  return (\n    <div>\n      <NameField listOfContacts={data} />\n      <FilterField addFilter={addFilter} />\n      {isFetching && <h2>Loading...</h2>}\n      {data && <ContactList listOfContacts={visibleContacts.reverse()} />}\n    </div>\n  );\n}\n"],"names":["FieldName","styled","ContactField","Field","AddContactButton","schema","yup","shape","name","required","number","positive","initialValues","NameField","listOfContacts","useAddContactMutation","isLoading","addContact","nameInputId","nanoid","numberInputId","validationSchema","onSubmit","values","resetForm","newContact","id","swal","title","icon","button","find","contact","text","autoComplete","htmlFor","type","component","disabled","ListElement","DeleteBtn","ContactItem","useDeleteContactMutation","deleteContact","isDeleting","onClick","ContactList","map","FilterContainer","FilterName","FilterInput","FilterField","addFilter","onChange","ContactsView","useState","search","setSearch","useGetContactsQuery","data","isFetching","normalizedFilter","toLocaleLowerCase","visibleContacts","filter","includes","event","currentTarget","value","reverse"],"sourceRoot":""}