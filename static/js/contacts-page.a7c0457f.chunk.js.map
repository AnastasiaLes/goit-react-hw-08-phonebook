{"version":3,"file":"static/js/contacts-page.a7c0457f.chunk.js","mappings":"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","sources":["components/Form/Form.styled.js","components/Form/Form.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/filter.jsx","views/ContactsView.styled.js","views/ContactView.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const FieldName = styled.label`\n  margin-left: 30px;\n  display: flex;\n  margin-right: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const ContactField = styled(Field)`\n  margin-left: 30px;\n  display: flex;\n  color: grey;\n  padding: 5px;\n  margin-bottom: 20px;\n  background-color: #87ceeb;\n  border-top: transparent;\n  border-left: transparent;\n  border-right: transparent;\n  border-bottom: solid, 1px, #fff;\n`;\n\nexport const AddContactButton = styled.button`\n  margin-left: 30px;\n  display: flex;\n  padding: 10px;\n  text-transform: uppercase;\n  letter-spacing: 2.5px;\n  font-weight: 500;\n  color: #fff;\n  background-color: #778899;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease 0s;\n  cursor: pointer;\n  outline: none;\n`;\n\nexport const FormContainer = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  flex-basis: 50%;\n  padding: 30px 100px 30px 60px;\n  background: #87ceeb;\n  box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  margin: 30px;\n  /* margin-left: auto;\nmargin-right: auto; */\n`;\n\nexport const FormName = styled.h2`\n  margin-left: 30px;\n`;\n","import React from 'react';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport { ContactField, FieldName, AddContactButton } from './Form.styled';\nimport { nanoid } from 'nanoid';\nimport * as yup from 'yup';\nimport { useAddContactMutation } from 'redux/contactsSlice';\nimport swal from 'sweetalert';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.number().required().positive(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport function NameField({ listOfContacts }) {\n  const [, { isLoading }] = useAddContactMutation();\n  const [addContact] = useAddContactMutation();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, number } = values;\n    const newContact = {\n      name,\n      number,\n      id: nanoid(),\n    };\n    swal({\n      title: 'Contact was added!',\n      icon: 'success',\n      button: false,\n    });\n\n    listOfContacts.find(contact => contact.name === newContact.name)\n      ? swal({\n          title: 'Oops!',\n          text: `${newContact.name} is already in contacts`,\n          icon: 'error',\n          button: 'Ok',\n        })\n      : addContact(newContact);\n\n    resetForm();\n  };\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form autoComplete=\"off\">\n        <FieldName htmlFor={nameInputId}>Name</FieldName>\n        <ContactField type=\"text\" name=\"name\" id={nameInputId} />\n        <ErrorMessage name=\"name\" component=\"div\" />\n\n        <FieldName htmlFor={numberInputId}>Number</FieldName>\n        <ContactField type=\"tel\" name=\"number\" id={numberInputId} />\n        <ErrorMessage name=\"number\" component=\"div\" />\n\n        <AddContactButton type=\"submit\" disabled={isLoading}>\n          {' '}\n          {isLoading ? '...' : 'Add contact'}\n        </AddContactButton>\n      </Form>\n    </Formik>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const ListElement = styled.li`\n  margin: 10px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const DeleteBtn = styled.button`\n  padding: 10px;\n  text-transform: uppercase;\n  letter-spacing: 2.5px;\n  font-weight: 500;\n  color: #fff;\n  background-color: #778899;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease 0s;\n  cursor: pointer;\n  outline: none;\n  /* margin-left: 20px;\n  border: solid 1px gray;\n  background-color: #6495ED;\n  padding: 5px 10px;\n  cursor: pointer; */\n  justify-items: end;\n`;\n","import { ListElement, DeleteBtn } from './ContactList.styled';\nimport { useDeleteContactMutation } from 'redux/contactsSlice';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  return (\n    <ListElement>\n      {name}: {number}\n      <DeleteBtn\n        type=\"button\"\n        disabled={isDeleting}\n        onClick={() => deleteContact(id)}\n      >\n        {' '}\n        {isDeleting ? 'Deleting...' : 'Delete'}\n      </DeleteBtn>\n    </ListElement>\n  );\n};\n","import { ContactItem } from './ContactItem';\n\nexport const ContactList = ({ listOfContacts }) => {\n  return (\n    <div>\n      <ul>\n        {listOfContacts.map(contact => (\n          <ContactItem key={contact.id} {...contact} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterContainer = styled.div`\n  /* display: flex; */\n  margin: 10px;\n  margin-left: 30px;\n`;\n\nexport const FilterName = styled.label`\n  display: flex;\n  margin-bottom: 15px;\n`;\n\nexport const FilterInput = styled.input`\n  display: flex;\n  background-color: #87ceeb;\n  border-top: transparent;\n  border-left: transparent;\n  border-right: transparent;\n  border-bottom: solid, 1px, #fff;\n`;\n","import React from 'react';\nimport { FilterContainer, FilterName, FilterInput } from './Filter.styled';\n\nexport const FilterField = ({ addFilter }) => {\n  return (\n    <FilterContainer>\n      <FilterName>Find contacts by name</FilterName>\n      <FilterInput type=\"text\" name=\"filter\" onChange={addFilter} />\n    </FilterContainer>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactsContainer = styled.div`\n  display: flex;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 30px;\n  flex-direction: row-reverse;\n  flex-wrap: wrap;\n  width: 70%;\n  /* margin: 20px; */\n  column-width: 48%;\n  column-count: 2;\n  column-gap: 4%;\n  align-items: start;\n  justify-items: center;\n  flex-basis: 300px;\n  flex-shrink: 0;\n`;\n\nexport const ContactsTitle = styled.h2`\n  /* text-align: center; */\n`;\n\nexport const ContactsColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  /* flex-basis: 100%; */\n  flex: 1;\n  height: 48%;\n  padding: 20px;\n  /* column-count: 2;\ncolumn-gap: 20px; */\n  /* margin: 16px 25px; */\n  background: #87ceeb;\n  height: 100%;\n  box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  margin-bottom: 20px;\n\n  /* + .ContactsColumn {\n    margin-left: 4%;\n} */\n`;\n","import { NameField } from 'components/Form/Form';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { FilterField } from 'components/Filter/filter';\nimport { useGetContactsQuery } from 'redux/contactsSlice';\nimport { useState } from 'react';\nimport {\n  ContactsContainer,\n  ContactsTitle,\n  ContactsColumn,\n} from './ContactsView.styled';\n\nexport default function ContactsView() {\n  const [search, setSearch] = useState('');\n  const { data, isFetching } = useGetContactsQuery();\n\n  const normalizedFilter = search.toLocaleLowerCase();\n  const visibleContacts = data?.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(normalizedFilter)\n  );\n\n  const addFilter = event => {\n    setSearch(event.currentTarget.value);\n  };\n\n  return (\n    <ContactsContainer>\n      <ContactsColumn>\n        <NameField listOfContacts={data} />\n      </ContactsColumn>\n\n      <ContactsColumn>\n        <ContactsTitle>Contacts</ContactsTitle>\n        <FilterField addFilter={addFilter} />\n        {isFetching && <h2>Loading...</h2>}\n        {data && <ContactList listOfContacts={visibleContacts.reverse()} />}\n      </ContactsColumn>\n    </ContactsContainer>\n  );\n}\n"],"names":["FieldName","styled","ContactField","Field","AddContactButton","FormContainer","FormName","schema","yup","shape","name","required","number","positive","initialValues","NameField","listOfContacts","useAddContactMutation","isLoading","addContact","nameInputId","nanoid","numberInputId","validationSchema","onSubmit","values","resetForm","newContact","id","swal","title","icon","button","find","contact","text","autoComplete","htmlFor","type","component","disabled","ListElement","DeleteBtn","ContactItem","useDeleteContactMutation","deleteContact","isDeleting","onClick","ContactList","map","FilterContainer","FilterName","FilterInput","FilterField","addFilter","onChange","ContactsContainer","ContactsTitle","ContactsColumn","ContactsView","useState","search","setSearch","useGetContactsQuery","data","isFetching","normalizedFilter","toLocaleLowerCase","visibleContacts","filter","includes","event","currentTarget","value","reverse"],"sourceRoot":""}