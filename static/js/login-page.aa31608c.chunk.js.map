{"version":3,"file":"static/js/login-page.aa31608c.chunk.js","mappings":"wTAGaA,EAAYC,EAAAA,EAAAA,MAAH,+GAOTC,GAAeD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,kRAaZG,EAAmBH,EAAAA,EAAAA,OAAH,4WAiBhBI,EAAgBJ,EAAAA,EAAAA,IAAH,oSAabK,EAAWL,EAAAA,EAAAA,GAAH,+C,wHCYrB,UAjDkB,WAChB,IAAMM,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAEJE,MAAM,yBACNC,IAAI,KACJC,SAAS,qBACZC,SAAUL,EAAAA,KAAaI,aAenBE,GAAkBC,EAAAA,EAAAA,MAClBC,GAAeD,EAAAA,EAAAA,MACrB,OACE,UAAC,KAAD,YACE,SAAC,KAAD,sBACA,SAAC,KAAD,CACEE,cAlBgB,CACpBP,MAAO,GACPG,SAAU,IAiBNK,iBAAkBX,EAClBY,SAfe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACtBX,EAAoBU,EAApBV,MAAOG,EAAaO,EAAbP,SACfR,GAASiB,EAAAA,EAAAA,IAAM,CAAEZ,MAAAA,EAAOG,SAAAA,KACxBV,EAAS,wCACTkB,KAQE,UAKE,UAAC,KAAD,CAAME,aAAa,MAAnB,WACE,SAAC,KAAD,CAAWC,QAASR,EAApB,qBACA,SAAC,KAAD,CAAcS,KAAK,QAAQC,KAAK,QAAQC,GAAIX,KAC5C,SAAC,KAAD,CAAcU,KAAK,SAASE,UAAU,SAEtC,SAAC,KAAD,CAAWJ,QAASV,EAApB,uBACA,SAAC,KAAD,CAAcW,KAAK,WAAWC,KAAK,WAAWC,GAAIb,KAClD,SAAC,KAAD,CAAcY,KAAK,WAAWE,UAAU,SACxC,SAAC,KAAD,CAAkBH,KAAK,SAAvB","sources":["components/Form/Form.styled.js","views/LoginView.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const FieldName = styled.label`\n  margin-left: 30px;\n  display: flex;\n  margin-right: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const ContactField = styled(Field)`\n  margin-left: 30px;\n  display: flex;\n  color: grey;\n  padding: 5px;\n  margin-bottom: 20px;\n  background-color: #87ceeb;\n  border-top: transparent;\n  border-left: transparent;\n  border-right: transparent;\n  border-bottom: solid, 1px, #fff;\n`;\n\nexport const AddContactButton = styled.button`\n  margin-left: 30px;\n  display: flex;\n  padding: 10px;\n  text-transform: uppercase;\n  letter-spacing: 2.5px;\n  font-weight: 500;\n  color: #fff;\n  background-color: #778899;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease 0s;\n  cursor: pointer;\n  outline: none;\n`;\n\nexport const FormContainer = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  flex-basis: 50%;\n  padding: 30px 100px 30px 60px;\n  background: #87ceeb;\n  box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  margin: 30px;\n  /* margin-left: auto;\nmargin-right: auto; */\n`;\n\nexport const FormName = styled.h2`\n  margin-left: 30px;\n`;\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/authOperations';\nimport { useNavigate } from 'react-router-dom';\n\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport {\n  ContactField,\n  AddContactButton,\n  FieldName,\n  FormContainer,\n  FormName,\n} from 'components/Form/Form.styled';\n\nconst LoginPage = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const schema = yup.object().shape({\n    email: yup\n      .string()\n      .email('Must be a valid email')\n      .max(255)\n      .required('Email is required'),\n    password: yup.string().required(),\n  });\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { email, password } = values;\n    dispatch(login({ email, password }));\n    navigate('/goit-react-hw-08-phonebook/contacts');\n    resetForm();\n  };\n\n  const passwordInputId = nanoid();\n  const emailInputId = nanoid();\n  return (\n    <FormContainer>\n      <FormName>Log In</FormName>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form autoComplete=\"off\">\n          <FieldName htmlFor={emailInputId}>E-mail</FieldName>\n          <ContactField type=\"email\" name=\"email\" id={emailInputId} />\n          <ErrorMessage name=\"e-mail\" component=\"div\" />\n\n          <FieldName htmlFor={passwordInputId}>Password</FieldName>\n          <ContactField type=\"password\" name=\"password\" id={passwordInputId} />\n          <ErrorMessage name=\"password\" component=\"div\" />\n          <AddContactButton type=\"submit\">Log In</AddContactButton>\n        </Form>\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default LoginPage;\n"],"names":["FieldName","styled","ContactField","Field","AddContactButton","FormContainer","FormName","navigate","useNavigate","dispatch","useDispatch","schema","yup","shape","email","max","required","password","passwordInputId","nanoid","emailInputId","initialValues","validationSchema","onSubmit","values","resetForm","login","autoComplete","htmlFor","type","name","id","component"],"sourceRoot":""}